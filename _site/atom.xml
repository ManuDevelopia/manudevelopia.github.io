<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

 <title>developia.info | another developer stories repository</title>
 <link href="http://localhost:4000/atom.xml" rel="self"/>
 <id>http://localhost:4000</id>
 <updated>2018-06-20T12:12:42+02:00</updated>
 <author>
   <name>Manu Garcia</name>
   <uri>http://developia.info</uri>
   <email>manu@developia.info</email>
 </author>

 

 <entry>
   <title>Mockito 103</title>
   <link href="http://localhost:4000/Mockito103"/>
   <id>http://localhost:4000/Mockito103</id>
   <updated>2018-05-11T00:00:00+02:00</updated>
   <content type="html">&lt;p&gt;Vale vale, ya veo el concepto, utilizado la reflexión se hace la mágia para hacer que se devuelva del elemento mockeado la respuesta que queremos para nuestro test, pero… no hay otra manera más estilo ‘Mockito’? Parece innecesariamente complicado hacer reflexión haciendo set del mock.&lt;/p&gt; &lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td...</content>
 </entry>

 

 <entry>
   <title>Mockito 102</title>
   <link href="http://localhost:4000/Mockito102"/>
   <id>http://localhost:4000/Mockito102</id>
   <updated>2018-04-24T00:00:00+02:00</updated>
   <content type="html">&lt;p&gt;Bien bien, lo recogido en el post ‘Mockito 101’ parece sencillo, pero en el mundo real los Controller/Services/Repositories llaman a servicios y repositories desde dentro de los métodos y claro no siempre se tiene en cuenta la testabilidad a la hora de escribir métodos, con lo que llegamos al y...</content>
 </entry>

 

 <entry>
   <title>Mockito 101</title>
   <link href="http://localhost:4000/Mockito101"/>
   <id>http://localhost:4000/Mockito101</id>
   <updated>2018-04-12T00:00:00+02:00</updated>
   <content type="html">&lt;p&gt;Necesito mockear las respuestas de servicios y repositories, para ello me planteo utilizar Mockito, y esta lectura parece contener toda la información sobre como empezar http://www.baeldung.com/injecting-mocks-in-spring&lt;/p&gt; &lt;p&gt;Mockito nos permite crear la respuesta que esperaríamos obtener de un servicio o de un repositorio. Para ello tan solo tenemos que declarar para...</content>
 </entry>

 

</feed>